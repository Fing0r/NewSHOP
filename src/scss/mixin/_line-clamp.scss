@mixin line-clamp($font-size,
  $line-height,
  $lines-to-show) {
  @if unitless($line-height)==false {
    $line-height: create-unitless-line-height($font-size, $line-height);
  }

  display: block; // Fallback for non-webkit browsers
  display: -webkit-box;
  font-size: $font-size+px;
  max-height: calc($font-size * $line-height * $lines-to-show)+px; // Fallback for non-webkit browsers
  line-height: $line-height;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $lines-to-show;
}

@mixin line-clamp-min($font-size,
  $line-height,
  $lines-to-show) {
  @if unitless($line-height)==false {
    $line-height: create-unitless-line-height($font-size, $line-height);
  }

  display: block; // Fallback for non-webkit browsers
  display: -webkit-box;
  font-size: $font-size+px;
  max-height: ($font-size * $line-height * $lines-to-show)+px; // Fallback for non-webkit browsers
  min-height: ($font-size * $line-height * $lines-to-show)+px; // Fallback for non-webkit browsers
  line-height: $line-height;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $lines-to-show;
}

@mixin line-clamp-new($font-size, $line-height, $lines-to-show, $font-weight: inherit, $min-height: none) {
  @if unitless($line-height)==false {
    $line-height: create-unitless-line-height($font-size, $line-height);
  }

  display: block; // Fallback for non-webkit browsers
  display: -webkit-box;
  overflow: hidden;
  max-height: calc($font-size * $line-height * $lines-to-show); // Fallback for non-webkit browsers
  @if ($min-height == 1) {
    min-height: calc($font-size * $line-height * $lines-to-show);
  }

  font-weight: $font-weight;
  font-size: $font-size;
  line-height: $line-height;
  // max-height: rem(calc($font-size * $line-height * $lines-to-show)); // Fallback for non-webkit browsers
  text-overflow: ellipsis;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $lines-to-show;
}